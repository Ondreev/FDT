// productUtils.js - –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –∏—Ö ID –ø—Ä–µ—Ñ–∏–∫—Å–∞–º–∏
// –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–µ –ø—Ä–æ–µ–∫—Ç–∞

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤ ID —Ç–æ–≤–∞—Ä–æ–≤
 */
export const PRODUCT_ID_PREFIXES = {
  // –£—Å–ª–æ–≤–∏—è –≤ ID
  H: { type: 'condition', label: '–û—Å—Ç—Ä–æ–µ', color: '#e03636', emoji: 'üå∂Ô∏è' },
  Z: { type: 'condition', label: '–ó–∞–ø–µ—á–µ–Ω–Ω—ã–π', color: '#ff7f32', emoji: 'üî•' },
  T: { type: 'condition', label: '–¢–µ–ø–ª—ã–π', color: '#8bc34a', emoji: 'üî•' },
  R2000: { type: 'flash', label: 'FLASH –±–ª—é–¥–æ —Å–∫–∏–¥–∫–∞ 99%', color: '#ff0000', emoji: '‚ö°' },
  X: { type: 'promo', label: '–ë–ª—é–¥–æ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ 1+1=3', color: '#9c27b0', emoji: 'üéÅ' },
  S: { type: 'set', label: '–°–ï–¢ - —Ç–æ–≤–∞—Ä –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ —É—Å–ª–æ–≤–∏—è—Ö —Å–∫–∏–¥–æ–∫ –∏ —Ñ–ª–µ—à', color: '#607d8b', emoji: 'üì¶' },
  C: { type: 'chef', label: '–®–µ—Ñ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç', color: '#FFD700', emoji: 'üëë' },
  W: { type: 'recommend', label: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –∫ –∑–∞–∫–∞–∑—É', color: '#4caf50', emoji: '‚≠ê' },

  // –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ö–û–ú–ë–û
  Q: { type: 'combo', label: '–ó–∞–∫—É—Å–∫–∏', category: 'appetizers', emoji: 'ü•ó' },
  Y: { type: 'combo', label: '–°–æ—É—Å—ã', category: 'sauces', emoji: 'ü•´' },
  D: { type: 'combo', label: '–ù–∞–ø–∏—Ç–∫–∏', category: 'drinks', emoji: 'ü•§' }
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ ID —Ç–æ–≤–∞—Ä–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å
 */
export function hasProductPrefix(productId, prefix) {
  return String(productId).includes(prefix);
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—Ä–µ—Ñ–∏–∫—Å—ã —Ç–æ–≤–∞—Ä–∞
 */
export function getProductPrefixes(productId) {
  const id = String(productId);
  const prefixes = [];
  
  for (const [prefix, config] of Object.entries(PRODUCT_ID_PREFIXES)) {
    if (id.includes(prefix)) {
      prefixes.push({ prefix, ...config });
    }
  }
  
  return prefixes;
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–æ–≤–∞—Ä –æ—Å–Ω–æ–≤–Ω—ã–º –±–ª—é–¥–æ–º (–¥–ª—è upsell)
 */
export function isMainDish(product) {
  const productId = String(product.id);
  return !productId.includes('Q') && 
         !productId.includes('Y') && 
         !productId.includes('D') && 
         !productId.includes('S') && 
         !productId.includes('R2000') && 
         !product.isFlashOffer && 
         !product.isDelivery;
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–æ–≤–∞—Ä —Ñ–ª–µ—à-–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º
 */
export function isFlashProduct(product) {
  return hasProductPrefix(product.id, 'R2000');
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–æ–≤–∞—Ä —Å–µ—Ç–æ–º
 */
export function isSetProduct(product) {
  return hasProductPrefix(product.id, 'S');
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –ª–∏ —à–µ—Ñ —Ç–æ–≤–∞—Ä
 */
export function isChefRecommended(product) {
  return hasProductPrefix(product.id, 'C');
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ª–∏ —Ç–æ–≤–∞—Ä –∫ –∑–∞–∫–∞–∑—É
 */
export function isRecommendedToOrder(product) {
  return hasProductPrefix(product.id, 'W');
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É—á–∞—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–æ–≤–∞—Ä –≤ –∞–∫—Ü–∏–∏ 1+1=3
 */
export function isPromoProduct(product) {
  return hasProductPrefix(product.id, 'X');
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –ø–æ —Ç–∏–ø—É –∫–æ–º–±–æ
 */
export function getComboProducts(products, comboType) {
  const comboLetters = {
    appetizers: 'Q',
    sauces: 'Y', 
    drinks: 'D'
  };
  
  const letter = comboLetters[comboType];
  if (!letter) return [];
  
  return products.filter(product => hasProductPrefix(product.id, letter));
}

/**
 * –§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –∏—Å–∫–ª—é—á–∞—è —Å–µ—Ç—ã (–¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å–∫–∏–¥–æ–∫)
 */
export function filterNonSetProducts(cartItems) {
  return cartItems.filter(item => 
    !item.isDelivery && 
    !hasProductPrefix(item.id, 'S')
  );
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∏–ª–∏ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤
 */
export function getProductCardStyles(product) {
  const styles = {
    container: {},
    badges: []
  };

  // –°—Ç–∏–ª–∏ –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ —à–µ—Ñ–∞
  if (isChefRecommended(product)) {
    styles.container = {
      boxShadow: '0 8px 25px rgba(255, 215, 0, 0.4)',
      border: '3px solid #FFD700',
      animation: 'chefGlow 2s infinite'
    };
  }

  // –°–æ–∑–¥–∞–µ–º –±–µ–π–¥–∂–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞
  const prefixes = getProductPrefixes(product.id);
  let topOffset = 2.2; // rem

  prefixes.forEach(({ prefix, label, color }) => {
    if (prefix !== 'C') { // –ö–æ—Ä–æ–Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ
      styles.badges.push({
        label,
        color,
        backgroundColor: color,
        top: `${topOffset}rem`,
        right: '1rem'
      });
      topOffset += 1.3; // –°–º–µ—â–µ–Ω–∏–µ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –±–µ–π–¥–∂–∞
    }
  });

  return styles;
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –±–µ–π–¥–∂–µ–π (–∏–∑–±–µ–≥–∞–µ–º –Ω–∞–ª–æ–∂–µ–Ω–∏—è)
 */
export function getBadgePosition(product, badgeIndex = 0) {
  const baseTop = 2.2;
  let offset = 0;

  // –£—á–∏—Ç—ã–≤–∞–µ–º –¥—Ä—É–≥–∏–µ –±–µ–π–¥–∂–∏
  const prefixes = getProductPrefixes(product.id);
  const visibleBadges = prefixes.filter(p => p.prefix !== 'C').length;
  
  if (badgeIndex > 0) {
    offset = badgeIndex * 1.3;
  }

  return `${baseTop + offset}rem`;
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ–ª–∂–µ–Ω –ª–∏ —Ç–æ–≤–∞—Ä —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–∞—Å—á–µ—Ç–µ —Å–∫–∏–¥–æ–∫
 */
export function canParticipateInDiscounts(product) {
  return !isSetProduct(product) && !isFlashProduct(product);
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å flash —Ç–æ–≤–∞—Ä –∏–∑ —Å–ø–∏—Å–∫–∞
 */
export function getFlashProduct(products) {
  return products.find(p => isFlashProduct(p));
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤ peeking popup (—Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º W)
 */
export function getRecommendedProducts(products) {
  return products.filter(product => isRecommendedToOrder(product));
}

/**
 * –°–æ–∑–¥–∞—Ç—å flash –≤–µ—Ä—Å–∏—é —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã
 */
export function createFlashCartItem(product) {
  return {
    id: `${product.id}_flash`,
    name: `${product.name} (FLASH 99% —Å–∫–∏–¥–∫–∞)`,
    price: Math.round(product.price * 0.01), // 99% —Å–∫–∏–¥–∫–∞
    originalPrice: product.price,
    quantity: 1,
    isFlashOffer: true,
    image: product.image,
    flashDiscount: 99
  };
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è upsell —à–∞–≥–æ–≤
 */
export function getUpsellSteps() {
  return [
    { 
      title: '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫—É—Å–∫–∏?', 
      categoryLetter: 'Q',
      type: 'appetizers',
      emoji: 'ü•ó'
    },
    { 
      title: '–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—É—Å—ã', 
      categoryLetter: 'Y',
      type: 'sauces', 
      emoji: 'ü•´'
    },
    { 
      title: '–î–æ–±–∞–≤–∏—Ç—å –Ω–∞–ø–∏—Ç–∫–∏?', 
      categoryLetter: 'D',
      type: 'drinks',
      emoji: 'ü•§'
    }
  ];
}

/**
 * –û—Ç–ª–∞–¥–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø—Ä–µ—Ñ–∏–∫—Å—ã —Ç–æ–≤–∞—Ä–∞
 */
export function debugProductPrefixes(product) {
  const prefixes = getProductPrefixes(product.id);
  console.log(`–¢–æ–≤–∞—Ä ${product.name} (ID: ${product.id}):`, {
    prefixes,
    isMainDish: isMainDish(product),
    isFlash: isFlashProduct(product),
    isSet: isSetProduct(product),
    isChef: isChefRecommended(product),
    canDiscount: canParticipateInDiscounts(product)
  });
}

export default {
  PRODUCT_ID_PREFIXES,
  hasProductPrefix,
  getProductPrefixes,
  isMainDish,
  isFlashProduct,
  isSetProduct,
  isChefRecommended,
  isRecommendedToOrder,
  isPromoProduct,
  getComboProducts,
  filterNonSetProducts,
  getProductCardStyles,
  getBadgePosition,
  canParticipateInDiscounts,
  getFlashProduct,
  getRecommendedProducts,
  createFlashCartItem,
  getUpsellSteps,
  debugProductPrefixes
};