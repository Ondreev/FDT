// featureFlags.js - –°–∏—Å—Ç–µ–º–∞ —Ñ–ª–∞–≥–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏—á–∞–º–∏

import { clientConfig } from '../config/clientConfig.js';

/**
 * –°–∏—Å—Ç–µ–º–∞ —Ñ–ª–∞–≥–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π –ø–æ–∑–≤–æ–ª—è–µ—Ç:
 * 1. –í–∫–ª—é—á–∞—Ç—å/–æ—Ç–∫–ª—é—á–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–¥–∞
 * 2. –î–µ–ª–∞—Ç—å A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
 * 3. –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –≤–Ω–µ–¥—Ä—è—Ç—å –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
 * 4. –ë—ã—Å—Ç—Ä–æ –æ—Ç–∫–ª—é—á–∞—Ç—å –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
 */

class FeatureFlagManager {
  constructor(config) {
    this.config = config;
    this.cache = new Map();
    this.listeners = new Map();
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏ —Ñ—É–Ω–∫—Ü–∏—è
   * @param {string} flagName - –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–ª–∞–≥–∞
   * @returns {boolean} –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–ª–∞–≥–∞
   */
  isEnabled(flagName) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    if (this.cache.has(flagName)) {
      return this.cache.get(flagName);
    }

    // –ü–æ–ª—É—á–∞–µ–º –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    const features = this.config.getComponentConfig('features');
    const isEnabled = features[flagName] || false;

    // –ö—ç—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    this.cache.set(flagName, isEnabled);

    return isEnabled;
  }

  /**
   * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–ª–∞–≥–∞ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
   * @param {string} flagName - –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–ª–∞–≥–∞
   * @param {boolean} enabled - –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
   */
  setFlag(flagName, enabled) {
    this.cache.set(flagName, enabled);
    this.notifyListeners(flagName, enabled);
  }

  /**
   * –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–ª–∞–≥–∞
   * @param {string} flagName - –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–ª–∞–≥–∞
   * @param {Function} callback - –ö–æ–ª–±—ç–∫ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
   */
  subscribe(flagName, callback) {
    if (!this.listeners.has(flagName)) {
      this.listeners.set(flagName, []);
    }
    this.listeners.get(flagName).push(callback);
  }

  /**
   * –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ñ–ª–∞–≥–∞
   * @param {string} flagName - –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–ª–∞–≥–∞
   * @param {Function} callback - –ö–æ–ª–±—ç–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
   */
  unsubscribe(flagName, callback) {
    const callbacks = this.listeners.get(flagName);
    if (callbacks) {
      const index = callbacks.indexOf(callback);
      if (index > -1) {
        callbacks.splice(index, 1);
      }
    }
  }

  /**
   * –£–≤–µ–¥–æ–º–∏—Ç—å —Å–ª—É—à–∞—Ç–µ–ª–µ–π –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–ª–∞–≥–∞
   * @param {string} flagName - –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–ª–∞–≥–∞
   * @param {boolean} enabled - –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
   */
  notifyListeners(flagName, enabled) {
    const callbacks = this.listeners.get(flagName);
    if (callbacks) {
      callbacks.forEach(callback => callback(enabled));
    }
  }

  /**
   * –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à —Ñ–ª–∞–≥–æ–≤
   */
  clearCache() {
    this.cache.clear();
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–ª–∞–≥–∏
   * @returns {Object} –û–±—ä–µ–∫—Ç —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ —Ñ–ª–∞–≥–∞–º–∏
   */
  getActiveFlags() {
    const features = this.config.getComponentConfig('features');
    const activeFlags = {};
    
    Object.keys(features).forEach(flagName => {
      if (this.isEnabled(flagName)) {
        activeFlags[flagName] = true;
      }
    });

    return activeFlags;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≥—Ä—É–ø–ø—É —Ñ–ª–∞–≥–æ–≤
   * @param {string[]} flagNames - –ú–∞—Å—Å–∏–≤ –Ω–∞–∑–≤–∞–Ω–∏–π —Ñ–ª–∞–≥–æ–≤
   * @param {string} mode - –†–µ–∂–∏–º: 'all' (–≤—Å–µ –≤–∫–ª—é—á–µ–Ω—ã) –∏–ª–∏ 'any' (–ª—é–±–æ–π –≤–∫–ª—é—á–µ–Ω)
   * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
   */
  checkFlags(flagNames, mode = 'all') {
    if (mode === 'all') {
      return flagNames.every(flagName => this.isEnabled(flagName));
    } else if (mode === 'any') {
      return flagNames.some(flagName => this.isEnabled(flagName));
    }
    return false;
  }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
export const featureFlags = new FeatureFlagManager(clientConfig);

// ========================================
// –•–ï–õ–ü–ï–†–´ –î–õ–Ø –ß–ê–°–¢–û –ò–°–ü–û–õ–¨–ó–£–ï–ú–´–• –§–õ–ê–ì–û–í
// ========================================

// –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
export const canUseCart = () => featureFlags.isEnabled('ENABLE_CART');
export const canCheckout = () => featureFlags.isEnabled('ENABLE_CHECKOUT');
export const canRegister = () => featureFlags.isEnabled('ENABLE_USER_REGISTRATION');

// –î–æ—Å—Ç–∞–≤–∫–∞ –∏ —Å–∞–º–æ–≤—ã–≤–æ–∑
export const hasDelivery = () => featureFlags.isEnabled('ENABLE_DELIVERY');
export const hasPickup = () => featureFlags.isEnabled('ENABLE_PICKUP');
export const hasDeliveryTracking = () => featureFlags.isEnabled('ENABLE_DELIVERY_TRACKING');

// –ü–ª–∞—Ç–µ–∂–∏
export const hasOnlinePayment = () => featureFlags.isEnabled('ENABLE_ONLINE_PAYMENT');
export const hasCashPayment = () => featureFlags.isEnabled('ENABLE_CASH_PAYMENT');
export const hasCardPayment = () => featureFlags.isEnabled('ENABLE_CARD_PAYMENT');

// –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥
export const hasDiscounts = () => featureFlags.isEnabled('ENABLE_DISCOUNTS');
export const hasFlashOffers = () => featureFlags.isEnabled('ENABLE_FLASH_OFFERS');
export const hasLoyaltyProgram = () => featureFlags.isEnabled('ENABLE_LOYALTY_PROGRAM');
export const hasCoupons = () => featureFlags.isEnabled('ENABLE_COUPONS');

// –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
export const hasReviews = () => featureFlags.isEnabled('ENABLE_REVIEWS');
export const hasRatings = () => featureFlags.isEnabled('ENABLE_RATINGS');
export const hasSharing = () => featureFlags.isEnabled('ENABLE_SHARING');

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
export const hasWhatsAppNotifications = () => featureFlags.isEnabled('ENABLE_WHATSAPP_NOTIFICATIONS');
export const hasSMSNotifications = () => featureFlags.isEnabled('ENABLE_SMS_NOTIFICATIONS');
export const hasEmailNotifications = () => featureFlags.isEnabled('ENABLE_EMAIL_NOTIFICATIONS');

// –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
export const hasAdminPanel = () => featureFlags.isEnabled('ENABLE_ADMIN_PANEL');
export const hasInventoryManagement = () => featureFlags.isEnabled('ENABLE_INVENTORY_MANAGEMENT');
export const hasReporting = () => featureFlags.isEnabled('ENABLE_REPORTING');

// –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
export const hasAnalytics = () => featureFlags.isEnabled('ENABLE_ANALYTICS');

// ========================================
// REACT –•–£–ö–ò –î–õ–Ø –§–õ–ê–ì–û–í
// ========================================

import { useState, useEffect } from 'react';

/**
 * –•—É–∫ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ–ª–∞–≥–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
 * @param {string} flagName - –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–ª–∞–≥–∞
 * @returns {boolean} –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–ª–∞–≥–∞
 */
export function useFeatureFlag(flagName) {
  const [enabled, setEnabled] = useState(() => featureFlags.isEnabled(flagName));

  useEffect(() => {
    const handleFlagChange = (newEnabled) => {
      setEnabled(newEnabled);
    };

    featureFlags.subscribe(flagName, handleFlagChange);

    return () => {
      featureFlags.unsubscribe(flagName, handleFlagChange);
    };
  }, [flagName]);

  return enabled;
}

/**
 * –•—É–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥—Ä—É–ø–ø—ã —Ñ–ª–∞–≥–æ–≤
 * @param {string[]} flagNames - –ú–∞—Å—Å–∏–≤ –Ω–∞–∑–≤–∞–Ω–∏–π —Ñ–ª–∞–≥–æ–≤
 * @param {string} mode - –†–µ–∂–∏–º: 'all' –∏–ª–∏ 'any'
 * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
 */
export function useFeatureFlags(flagNames, mode = 'all') {
  const [result, setResult] = useState(() => featureFlags.checkFlags(flagNames, mode));

  useEffect(() => {
    const checkFlags = () => {
      setResult(featureFlags.checkFlags(flagNames, mode));
    };

    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —Ñ–ª–∞–≥–æ–≤ –≤ –≥—Ä—É–ø–ø–µ
    flagNames.forEach(flagName => {
      featureFlags.subscribe(flagName, checkFlags);
    });

    return () => {
      flagNames.forEach(flagName => {
        featureFlags.unsubscribe(flagName, checkFlags);
      });
    };
  }, [flagNames, mode]);

  return result;
}

// ========================================
// –ö–û–ú–ü–û–ù–ï–ù–¢–´ –î–õ–Ø –£–°–õ–û–í–ù–û–ì–û –†–ï–ù–î–ï–†–ò–ù–ì–ê
// ========================================

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —É—Å–ª–æ–≤–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–ª–∞–≥–∞
 * @param {Object} props - –ü—Ä–æ–ø—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * @param {string} props.flag - –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–ª–∞–≥–∞
 * @param {React.ReactNode} props.children - –î–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
 * @param {React.ReactNode} props.fallback - –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è –ø–æ–∫–∞–∑–∞ –µ—Å–ª–∏ —Ñ–ª–∞–≥ –≤—ã–∫–ª—é—á–µ–Ω
 */
export function FeatureFlag({ flag, children, fallback = null }) {
  const enabled = useFeatureFlag(flag);
  return enabled ? children : fallback;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —É—Å–ª–æ–≤–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≥—Ä—É–ø–ø—ã —Ñ–ª–∞–≥–æ–≤
 * @param {Object} props - –ü—Ä–æ–ø—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * @param {string[]} props.flags - –ú–∞—Å—Å–∏–≤ –Ω–∞–∑–≤–∞–Ω–∏–π —Ñ–ª–∞–≥–æ–≤
 * @param {string} props.mode - –†–µ–∂–∏–º: 'all' –∏–ª–∏ 'any'
 * @param {React.ReactNode} props.children - –î–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
 * @param {React.ReactNode} props.fallback - –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è –ø–æ–∫–∞–∑–∞ –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
 */
export function FeatureFlags({ flags, mode = 'all', children, fallback = null }) {
  const enabled = useFeatureFlags(flags, mode);
  return enabled ? children : fallback;
}

// ========================================
// –£–¢–ò–õ–ò–¢–´ –î–õ–Ø –†–ê–ó–†–ê–ë–û–¢–ö–ò
// ========================================

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ —Ñ–ª–∞–≥–æ–≤ (—Ç–æ–ª—å–∫–æ –≤ development)
 */
export function debugFlags() {
  if (process.env.NODE_ENV !== 'development') {
    return;
  }

  console.group('üö© Feature Flags Debug');
  console.log('Active flags:', featureFlags.getActiveFlags());
  console.log('All features config:', clientConfig.getComponentConfig('features'));
  console.groupEnd();
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –≤–∫–ª—é—á–µ–Ω–∏—è —Ñ–ª–∞–≥–∞ (—Ç–æ–ª—å–∫–æ –≤ development)
 * @param {string} flagName - –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–ª–∞–≥–∞
 * @param {boolean} enabled - –°–æ—Å—Ç–æ—è–Ω–∏–µ
 */
export function setTestFlag(flagName, enabled) {
  if (process.env.NODE_ENV !== 'development') {
    console.warn('setTestFlag can only be used in development mode');
    return;
  }

  featureFlags.setFlag(flagName, enabled);
  console.log(`üö© Test flag ${flagName} set to ${enabled}`);
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
export { FeatureFlagManager };

// ========================================
// –ü–†–ò–ú–ï–†–´ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø
// ========================================

/*

// –í React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ:
import { useFeatureFlag, FeatureFlag, hasDiscounts } from './utils/featureFlags.js';

function MyComponent() {
  const canShowDiscounts = useFeatureFlag('ENABLE_DISCOUNTS');
  
  return (
    <div>
      {canShowDiscounts && <DiscountBanner />}
      
      <FeatureFlag flag="ENABLE_REVIEWS">
        <ReviewsSection />
      </FeatureFlag>
      
      <FeatureFlags flags={['ENABLE_CART', 'ENABLE_CHECKOUT']} mode="all">
        <ShoppingCart />
      </FeatureFlags>
    </div>
  );
}

// –í –æ–±—ã—á–Ω–æ–º JS:
import { featureFlags, hasDelivery } from './utils/featureFlags.js';

if (hasDelivery()) {
  // –ü–æ–∫–∞–∑–∞—Ç—å –æ–ø—Ü–∏–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
}

if (featureFlags.checkFlags(['ENABLE_ONLINE_PAYMENT', 'ENABLE_CARD_PAYMENT'], 'any')) {
  // –ü–æ–∫–∞–∑–∞—Ç—å –æ–Ω–ª–∞–π–Ω-–ø–ª–∞—Ç–µ–∂–∏
}

// –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞:
import { debugFlags, setTestFlag } from './utils/featureFlags.js';

debugFlags(); // –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ñ–ª–∞–≥–∏
setTestFlag('ENABLE_LOYALTY_PROGRAM', true); // –í—Ä–µ–º–µ–Ω–Ω–æ –≤–∫–ª—é—á–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é

*/