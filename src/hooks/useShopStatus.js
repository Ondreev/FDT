// hooks/useShopStatus.js
import { useState, useEffect } from 'react';
import { API_URL } from '../config';

export const useShopStatus = () => {
  const [isShopOpen, setIsShopOpen] = useState(true);
  const [isLoading, setIsLoading] = useState(true);
  const [showClosedModal, setShowClosedModal] = useState(false);

  useEffect(() => {
    checkShopStatus();
    // ‚úÖ –£–ú–ï–ù–¨–®–ò–õ –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    const interval = setInterval(checkShopStatus, 10000);
    return () => clearInterval(interval);
  }, []);

  const checkShopStatus = async () => {
    try {
      const response = await fetch(`${API_URL}?action=getSettings&t=${Date.now()}`);
      const settings = await response.json();
      
      console.log('üè™ Shop status check:', settings.shopOpen, typeof settings.shopOpen);
      
      // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞
      const shopOpenValue = settings.shopOpen;
      const shopOpen = shopOpenValue !== 'FALSE' && shopOpenValue !== 'false' && shopOpenValue !== false;
      
      console.log('üè™ Shop is open:', shopOpen);
      
      // ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –ï—Å–ª–∏ –º–∞–≥–∞–∑–∏–Ω —Ç–æ–ª—å–∫–æ —á—Ç–æ –∑–∞–∫—Ä—ã–ª—Å—è, —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      if (isShopOpen && !shopOpen && !isLoading) {
        console.log('üö® Shop just closed! Showing modal immediately');
        setShowClosedModal(true);
      }
      
      setIsShopOpen(shopOpen);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –º–∞–≥–∞–∑–∏–Ω–∞:', error);
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å—á–∏—Ç–∞–µ–º –º–∞–≥–∞–∑–∏–Ω –æ—Ç–∫—Ä—ã—Ç—ã–º
      setIsShopOpen(true);
    } finally {
      setIsLoading(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–∂–Ω–æ –ª–∏ –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
  const canAddToCart = () => {
    if (isLoading) {
      console.log('‚è≥ Cannot add to cart: still loading shop status');
      return false;
    }
    
    if (!isShopOpen) {
      console.log('üö´ Cannot add to cart: shop is closed');
      setShowClosedModal(true);
      return false;
    }
    
    console.log('‚úÖ Can add to cart: shop is open');
    return true;
  };

  const closeModal = () => {
    setShowClosedModal(false);
  };

  // ‚úÖ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –∑–∞–∫—Ä—ã—Ç–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ (–¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ addToCart)
  const forceCloseShop = () => {
    console.log('üîí Forcing shop to close');
    setIsShopOpen(false);
    setShowClosedModal(true);
  };

  return {
    isShopOpen,
    isLoading,
    showClosedModal,
    canAddToCart,
    closeModal,
    checkShopStatus, // –î–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
    setIsShopOpen,   // ‚úÖ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    setShowClosedModal, // ‚úÖ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    forceCloseShop   // ‚úÖ –£–¥–æ–±–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
  };
};
