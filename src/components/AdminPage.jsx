import { useState, useEffect } from 'react';

const API_URL = 'https://script.google.com/macros/s/AKfycbytJQZKK_57WXTalemzNQgVmlcS_HajnL0vo-FxDT4DogOCLDnJ4vWl0GMp8oQCaOi0/exec';

// –†–∞–±–æ—á–∞—è –∞–¥–º–∏–Ω–∫–∞ —Å –Ω–∞—Å—Ç–æ—è—â–∏–º API
const AdminLogin = ({ onLoginSuccess }) => {
  const [password, setPassword] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');
  const [availablePasswords, setAvailablePasswords] = useState([]);

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (!password.trim()) {
      setError('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å');
      return;
    }

    setIsLoading(true);
    setError('');

    try {
      // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –∏–∑ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ API
      const response = await fetch(`${API_URL}?action=getAdmins`);
      const admins = await response.json();
      
      console.log('–ù–∞–π–¥–µ–Ω–Ω—ã–µ –∞–¥–º–∏–Ω—ã:', admins); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
      setAvailablePasswords(admins.map(a => a.passwordHash).filter(Boolean));
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–æ–ª—å (—É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã)
      const admin = admins.find(admin => 
        admin.passwordHash && admin.passwordHash.trim() === password.trim()
      );
      
      if (admin) {
        console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!', admin);
        onLoginSuccess(admin);
      } else {
        setError('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å');
        console.log('‚ùå –ü–∞—Ä–æ–ª—å –Ω–µ –ø–æ–¥–æ—à–µ–ª');
        console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä–æ–ª–∏:', admins.map(a => `"${a.passwordHash}"`));
        console.log('–í–≤–µ–¥–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å:', `"${password}"`);
      }
    } catch (err) {
      console.error('Login error:', err);
      setError('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É');
    }

    setIsLoading(false);
  };

  return (
    <div style={{
      minHeight: '100vh',
      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      padding: '20px'
    }}>
      <div style={{
        background: 'white',
        padding: '2rem',
        borderRadius: '20px',
        boxShadow: '0 20px 40px rgba(0,0,0,0.1)',
        width: '100%',
        maxWidth: '400px',
        textAlign: 'center'
      }}>
        <div style={{ fontSize: '3rem', marginBottom: '1rem' }}>üëë</div>
        <h1 style={{ fontSize: '1.8rem', fontWeight: 'bold', color: '#2c1e0f', marginBottom: '0.5rem' }}>
          –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
        </h1>
        <p style={{ color: '#666', marginBottom: '2rem' }}>
          –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ë–æ—Å—Å!
        </p>

        <form onSubmit={handleSubmit}>
          <div style={{ marginBottom: '1.5rem', textAlign: 'left' }}>
            <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: 'bold', color: '#333' }}>
              –ü–∞—Ä–æ–ª—å
            </label>
            <input
              type="password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∏–∑ —Ç–∞–±–ª–∏—Ü—ã..."
              style={{
                width: '100%',
                padding: '1rem',
                border: '2px solid #e0e0e0',
                borderRadius: '12px',
                fontSize: '1rem',
                outline: 'none',
                boxSizing: 'border-box'
              }}
              onFocus={(e) => e.target.style.borderColor = '#667eea'}
              onBlur={(e) => e.target.style.borderColor = '#e0e0e0'}
            />
          </div>

          {error && (
            <div style={{
              background: '#ffebee',
              color: '#c62828',
              padding: '0.75rem',
              borderRadius: '8px',
              marginBottom: '1rem',
              fontSize: '0.9rem'
            }}>
              {error}
            </div>
          )}

          <button
            type="submit"
            disabled={isLoading}
            style={{
              width: '100%',
              padding: '1rem',
              background: isLoading 
                ? 'linear-gradient(135deg, #ccc, #999)' 
                : 'linear-gradient(135deg, #667eea, #764ba2)',
              color: 'white',
              border: 'none',
              borderRadius: '12px',
              fontSize: '1.1rem',
              fontWeight: 'bold',
              cursor: isLoading ? 'not-allowed' : 'pointer',
              transition: 'all 0.2s ease',
              boxShadow: '0 4px 12px rgba(102, 126, 234, 0.3)'
            }}
          >
            {isLoading ? 'üîê –ü—Ä–æ–≤–µ—Ä—è—é...' : 'üöÄ –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É'}
          </button>
        </form>

        <div style={{
          marginTop: '2rem',
          padding: '1rem',
          background: '#f8f9fa',
          borderRadius: '8px',
          fontSize: '0.9rem',
          color: '#666'
        }}>
          üí° –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∞ –∏–∑ Google Sheets (–∫–æ–ª–æ–Ω–∫–∞ passwordHash)
          
          {/* –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ */}
          {availablePasswords.length > 0 && (
            <div style={{ marginTop: '1rem' }}>
              <div style={{ marginBottom: '0.5rem', fontSize: '0.8rem' }}>
                –ë—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏):
              </div>
              {availablePasswords.map((pass, index) => (
                <button
                  key={index}
                  onClick={() => setPassword(pass)}
                  style={{
                    padding: '0.25rem 0.5rem',
                    margin: '0.25rem',
                    background: '#007bff',
                    color: 'white',
                    border: 'none',
                    borderRadius: '4px',
                    fontSize: '0.8rem',
                    cursor: 'pointer'
                  }}
                >
                  –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: "{pass}"
                </button>
              ))}
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

const SimpleAdminDashboard = ({ admin, onLogout }) => {
  return (
    <div style={{
      minHeight: '100vh',
      background: 'linear-gradient(135deg, #e3f2fd, #f3e5f5)',
      fontFamily: 'Arial, sans-serif'
    }}>
      <div style={{
        background: 'white',
        padding: '1rem 2rem',
        boxShadow: '0 2px 8px rgba(0,0,0,0.1)',
        display: 'flex',
        justifyContent: 'space-between',
        alignItems: 'center'
      }}>
        <div>
          <h1 style={{ fontSize: '1.8rem', fontWeight: 'bold', color: '#2c1e0f', margin: 0 }}>
            üëë –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç!
          </h1>
          <div style={{ fontSize: '0.9rem', color: '#666' }}>
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {admin.login}
          </div>
        </div>
        <button
          onClick={onLogout}
          style={{
            background: '#ff5722',
            color: 'white',
            border: 'none',
            padding: '0.5rem 1rem',
            borderRadius: '8px',
            cursor: 'pointer'
          }}
        >
          –í—ã–π—Ç–∏
        </button>
      </div>

      <div style={{ maxWidth: '800px', margin: '0 auto', padding: '2rem' }}>
        <div style={{
          background: 'white',
          borderRadius: '16px',
          padding: '2rem',
          textAlign: 'center',
          boxShadow: '0 4px 12px rgba(0,0,0,0.1)'
        }}>
          <div style={{ fontSize: '3rem', marginBottom: '1rem' }}>üéâ</div>
          <h2 style={{ color: '#2c1e0f', marginBottom: '1rem' }}>
            –†–æ—É—Ç–∏–Ω–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç!
          </h2>
          <p style={{ color: '#666', lineHeight: '1.6' }}>
            –ê–¥–º–∏–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –ø–æ –∞–¥—Ä–µ—Å—É /#/admin<br/>
            –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!<br/>
            –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ø–æ–ª–Ω—É—é –≤–µ—Ä—Å–∏—é —Å –∑–∞–∫–∞–∑–∞–º–∏
          </p>
          <button
            onClick={() => window.location.hash = '#/'}
            style={{
              padding: '1rem 2rem',
              background: 'linear-gradient(135deg, #667eea, #764ba2)',
              color: 'white',
              border: 'none',
              borderRadius: '12px',
              fontSize: '1rem',
              cursor: 'pointer',
              marginTop: '1rem'
            }}
          >
            –ù–∞–∑–∞–¥ –≤ –º–∞–≥–∞–∑–∏–Ω
          </button>
        </div>
      </div>
    </div>
  );
};

const AdminPage = () => {
  const [admin, setAdmin] = useState(null);

  useEffect(() => {
    const savedAdmin = localStorage.getItem('admin_session');
    if (savedAdmin) {
      try {
        setAdmin(JSON.parse(savedAdmin));
      } catch (error) {
        localStorage.removeItem('admin_session');
      }
    }
  }, []);

  const handleLoginSuccess = (adminData) => {
    setAdmin(adminData);
    localStorage.setItem('admin_session', JSON.stringify(adminData));
  };

  const handleLogout = () => {
    setAdmin(null);
    localStorage.removeItem('admin_session');
  };

  return admin ? (
    <SimpleAdminDashboard admin={admin} onLogout={handleLogout} />
  ) : (
    <AdminLogin onLoginSuccess={handleLoginSuccess} />
  );
};

export default AdminPage;
