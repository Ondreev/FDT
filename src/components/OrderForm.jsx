import { useState, useEffect, useRef } from 'react';

const API_URL = 'https://script.google.com/macros/s/AKfycbxAQF0sfNYonRjjH3zFBW58gkXZ3u5mKZWUtDyspY3uyHxFc-WnZB13Hz8IH1w-h3bG2Q/exec';

const OrderForm = ({ isOpen, onClose, cart, total, settings, onOrderSuccess }) => {
  const [currentStep, setCurrentStep] = useState(0);
  const [isTyping, setIsTyping] = useState(false);
  const [messages, setMessages] = useState([]);
  const [formData, setFormData] = useState({
    customerName: '',
    deliveryType: '',
    address: '',
    phone: '',
    comment: ''
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [inputValue, setInputValue] = useState('');
  
  // –ß–∏—Ç–∞–µ–º deliveryMode –ø—Ä—è–º–æ –∏–∑ localStorage
  const deliveryMode = localStorage.getItem('deliveryMode') || 'delivery';
  
  // Ref –¥–ª—è –∞–≤—Ç–æ—Å–∫—Ä–æ–ª–ª–∞
  const messagesEndRef = useRef(null);
  const chatContainerRef = useRef(null);

  // –ê–≤—Ç–æ—Å–∫—Ä–æ–ª–ª –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
  const scrollToBottom = () => {
    if (messagesEndRef.current) {
      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });
    }
  };

  // –°–∫—Ä–æ–ª–ª–∏–º –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  useEffect(() => {
    scrollToBottom();
  }, [messages, isTyping]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —à–∞–≥–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
  const getSteps = () => {
    // –ß–∏—Ç–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ
    const currentMode = localStorage.getItem('deliveryMode') || 'delivery';
    
    return [
      {
        id: 'greeting',
        botMessage: 'üëã –ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π –æ—Ñ–æ—Ä–º–∏–º —Ç–≤–æ–π –∑–∞–∫–∞–∑?\n\n–ö–∞–∫ –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?',
        type: 'text',
        field: 'customerName',
        placeholder: '–í–≤–µ–¥–∏ —Å–≤–æ—ë –∏–º—è...'
      },
      {
        id: 'delivery',
        type: 'delivery_info', // –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π —à–∞–≥
        field: currentMode === 'pickup' ? 'phone' : 'address' // –î–ª—è —Å–∞–º–æ–≤—ã–≤–æ–∑–∞ —Å—Ä–∞–∑—É —Ç–µ–ª–µ—Ñ–æ–Ω, –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ - –∞–¥—Ä–µ—Å
      },
      {
        id: 'phone',
        type: 'phone',
        field: 'phone',
        placeholder: '+7 999 123 45 67',
        skip: currentMode === 'pickup' // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ —É–∂–µ –≤–≤–µ–ª–∏ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ
      },
      {
        id: 'comment',
        botMessage: 'üí¨ –•–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É?\n\n(–ú–æ–∂–µ—à—å –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥)',
        type: 'textarea',
        field: 'comment',
        placeholder: '–ù–∞–ø—Ä–∏–º–µ—Ä: –±–µ–∑ –ª—É–∫–∞, –æ—á–µ–Ω—å –æ—Å—Ç—Ä–æ–µ...',
        optional: true
      },
      {
        id: 'confirmation',
        type: 'confirmation'
      }
    ];
  };

  useEffect(() => {
    if (isOpen) {
      // –ß–∏—Ç–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –¥–æ—Å—Ç–∞–≤–∫–∏
      const currentDeliveryMode = localStorage.getItem('deliveryMode') || 'delivery';
      
      setCurrentStep(0);
      setMessages([]);
      setInputValue('');
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ localStorage
      setFormData({
        customerName: '',
        deliveryType: currentDeliveryMode,
        address: currentDeliveryMode === 'pickup' ? '–°–∞–º–æ–≤—ã–≤–æ–∑' : '',
        phone: '',
        comment: ''
      });
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
      setTimeout(() => {
        setIsTyping(true);
        setTimeout(() => {
          setIsTyping(false);
          setMessages([{
            type: 'bot',
            text: getSteps()[0].botMessage,
            timestamp: new Date()
          }]);
        }, 1500);
      }, 500);
    }
  }, [isOpen]); // –£–±–∏—Ä–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç deliveryMode

  const getBotMessage = (stepIndex, updatedFormData) => {
    const step = getSteps()[stepIndex];
    // –ß–∏—Ç–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –∫–∞–∂–¥—ã–π —Ä–∞–∑
    const currentMode = localStorage.getItem('deliveryMode') || 'delivery';
    
    switch(step.id) {
      case 'delivery':
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –∏–∑ localStorage
        if (currentMode === 'pickup') {
          return `–û—Ç–ª–∏—á–Ω–æ, ${updatedFormData.customerName}! üöÄ\n\n–Ø —É–∂–µ –∑–Ω–∞—é, —á—Ç–æ —Ç—ã –≤—ã–±—Ä–∞–ª —Å–∞–º–æ–≤—ã–≤–æ–∑, –∑–∞—Å–∫–æ—á–∏—à—å –∫ –Ω–∞–º –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω! üè™\n\n–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä WhatsApp:`;
        } else {
          return `–û—Ç–ª–∏—á–Ω–æ, ${updatedFormData.customerName}! üöÄ\n\n–Ø –∑–Ω–∞—é, —Ç—ã –≤—ã–±—Ä–∞–ª –Ω–∞—à—É —Å–∫–æ—Ä–æ—Å—Ç–Ω—É—é –¥–æ—Å—Ç–∞–≤–∫—É, –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π –∞–¥—Ä–µ—Å, —á—Ç–æ–±—ã –∑–∞–∫–∞–∑ –Ω–µ —É–≤–µ–∑–ª–∏ –¥—Ä—É–≥–æ–º—É —á—É–≤–∞–∫—É! üòÑüìç`;
        }
      
      case 'phone':
        return 'üì± –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä WhatsApp:';
      
      case 'confirmation':
        return 'üéØ –ü—Ä–æ–≤–µ—Ä—å –∑–∞–∫–∞–∑:\n\n' +
          `üë§ ${updatedFormData.customerName}\n` +
          `${currentMode === 'pickup' ? 'üè™ –°–∞–º–æ–≤—ã–≤–æ–∑ (–†–µ—É—Ç–æ–≤, —É–ª. –ö–∞–ª–∏–Ω–∏–Ω–∞, –¥. 8)' : 'üöó –î–æ—Å—Ç–∞–≤–∫–∞: ' + updatedFormData.address}\n` +
          `üì± ${updatedFormData.phone}\n` +
          `${updatedFormData.comment ? 'üí¨ ' + updatedFormData.comment + '\n' : ''}` +
          `üí∞ –ò—Ç–æ–≥–æ: ${total} ${settings.currency || '‚ÇΩ'}\n\n` +
          '–û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–∫–∞–∑? üöÄ';
      
      default:
        return step.botMessage || '';
    }
  };

  const handleUserInput = (value) => {
    const currentStepData = getSteps()[currentStep];
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let userDisplayText = value;
    
    const userMessage = {
      type: 'user',
      text: userDisplayText,
      timestamp: new Date()
    };
    
    setMessages(prev => [...prev, userMessage]);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
    const updatedFormData = { ...formData };
    
    if (currentStepData.field) {
      updatedFormData[currentStepData.field] = value;
    }
    
    setFormData(updatedFormData);
    setInputValue('');
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
    setTimeout(() => {
      const nextStepIndex = findNextStep(currentStep, updatedFormData);
      if (nextStepIndex < getSteps().length) {
        setIsTyping(true);
        setTimeout(() => {
          setIsTyping(false);
          setCurrentStep(nextStepIndex);
          
          const botMessage = {
            type: 'bot',
            text: getBotMessage(nextStepIndex, updatedFormData),
            timestamp: new Date()
          };
          
          setMessages(prev => [...prev, botMessage]);
        }, 1200);
      }
    }, 800);
  };

  const findNextStep = (currentIndex, formData) => {
    const steps = getSteps();
    const currentMode = localStorage.getItem('deliveryMode') || 'delivery';
    
    for (let i = currentIndex + 1; i < steps.length; i++) {
      const step = steps[i];
      
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —à–∞–≥ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –µ—Å–ª–∏ —Å–∞–º–æ–≤—ã–≤–æ–∑ (—Ç–µ–ª–µ—Ñ–æ–Ω —É–∂–µ –≤–≤–µ–¥–µ–Ω –Ω–∞ —à–∞–≥–µ delivery)
      if (step.skip && currentMode === 'pickup') {
        continue;
      }
      
      return i;
    }
    return steps.length;
  };

  // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –û–¢–ü–†–ê–í–ö–ò –ó–ê–ö–ê–ó–ê
  const handleSubmitOrder = async () => {
    setIsSubmitting(true);
    
    try {
      // ‚úÖ –°–û–ó–î–ê–ï–ú –ü–†–ê–í–ò–õ–¨–ù–£–Æ –î–ê–¢–£ –° –í–†–ï–ú–ï–ù–ï–ú –í –ù–£–ñ–ù–û–ú –§–û–†–ú–ê–¢–ï
      const now = new Date();
      const day = String(now.getDate()).padStart(2, '0');
      const month = String(now.getMonth() + 1).padStart(2, '0');
      const year = now.getFullYear();
      const hours = String(now.getHours()).padStart(2, '0');
      const minutes = String(now.getMinutes()).padStart(2, '0');
      const seconds = String(now.getSeconds()).padStart(2, '0');
      
      // –§–æ—Ä–º–∞—Ç: 25.07.2025 19:51:45
      const formattedDateTime = `${day}.${month}.${year} ${hours}:${minutes}:${seconds}`;

      // –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
      const orderData = {
        action: 'createOrder',
        orderId: Date.now().toString(),
        customerName: formData.customerName,
        phone: formData.phone,
        address: formData.address,
        comment: formData.comment || '',
        products: JSON.stringify(cart.map(item => ({
          id: item.id,
          name: item.name,
          price: item.price,
          quantity: item.quantity
        }))),
        total: total.toString(),
        status: 'pending',
        date: formattedDateTime  // ‚úÖ –î–û–ë–ê–í–õ–Ø–ï–ú –î–ê–¢–£ –° –í–†–ï–ú–ï–ù–ï–ú –í –ü–†–ê–í–ò–õ–¨–ù–û–ú –§–û–†–ú–ê–¢–ï
      };

      // –§–æ—Ä–º–∏—Ä—É–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
      const params = new URLSearchParams(orderData);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ GET (–∫–∞–∫ –∏ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏)
      const response = await fetch(`${API_URL}?${params.toString()}`, {
        method: 'GET'
      });

      const result = await response.text();
      
      if (result.includes('success') || response.ok) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        setMessages(prev => [...prev, {
          type: 'bot',
          text: 'üéâ –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!\n\n–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å —Ç–æ–±–æ–π –≤ WhatsApp –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!\n\n–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! ‚ù§Ô∏è',
          timestamp: new Date()
        }]);
        
        setTimeout(() => {
          onClose();
          if (onOrderSuccess) {
            onOrderSuccess(); // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
          }
        }, 3000);
      } else {
        throw new Error('Server response: ' + result);
      }
      
    } catch (error) {
      console.error('Error submitting order:', error);
      
      setMessages(prev => [...prev, {
        type: 'bot',
        text: 'üòî –£–ø—Å! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\n\n–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –Ω–∞–º –Ω–∞–ø—Ä—è–º—É—é –≤ WhatsApp\n\n–û—à–∏–±–∫–∞: ' + error.message,
        timestamp: new Date()
      }]);
    }
    
    setIsSubmitting(false);
  };

  const renderInput = () => {
    if (currentStep >= getSteps().length || isTyping) return null;
    
    const step = getSteps()[currentStep];
    
    if (step.type === 'confirmation') {
      return (
        <div style={{
          display: 'flex',
          flexDirection: 'column',
          gap: '0.5rem',
          marginTop: '1rem'
        }}>
          <button
            onClick={handleSubmitOrder}
            disabled={isSubmitting}
            style={{
              padding: '1rem 2rem',
              background: isSubmitting 
                ? 'linear-gradient(135deg, #ccc, #999)' 
                : 'linear-gradient(135deg, #ff6b47, #ff8e32)',
              color: 'white',
              border: 'none',
              borderRadius: '25px',
              fontSize: '1.1rem',
              fontWeight: 'bold',
              cursor: isSubmitting ? 'not-allowed' : 'pointer',
              boxShadow: '0 4px 12px rgba(255, 107, 71, 0.3)',
              transition: 'all 0.2s ease'
            }}
          >
            {isSubmitting ? 'üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é...' : 'üöÄ –î–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–π!'}
          </button>
          <button
            onClick={() => {
              // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥
              const prevStep = currentStep - 1;
              setCurrentStep(prevStep);
              // –£–±–∏—Ä–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
              setMessages(prev => prev.slice(0, -1));
            }}
            disabled={isSubmitting}
            style={{
              padding: '0.8rem 1.5rem',
              background: 'transparent',
              color: '#666',
              border: '2px solid #e0e0e0',
              borderRadius: '25px',
              fontSize: '1rem',
              cursor: isSubmitting ? 'not-allowed' : 'pointer'
            }}
          >
            ‚Üê –ù–∞–∑–∞–¥
          </button>
        </div>
      );
    }
    
    // –û–±—ã—á–Ω—ã–µ –∏–Ω–ø—É—Ç—ã
    const handleSubmit = (e) => {
      e.preventDefault();
      if (inputValue.trim() || step.optional) {
        handleUserInput(inputValue.trim());
      }
    };

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º placeholder –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —à–∞–≥–∞ –∏ —Ä–µ–∂–∏–º–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
    const currentMode = localStorage.getItem('deliveryMode') || 'delivery';
    let placeholder = step.placeholder;
    if (step.id === 'delivery' && currentMode === 'pickup') {
      placeholder = '+7 999 123 45 67';
    } else if (step.id === 'delivery' && currentMode === 'delivery') {
      placeholder = '–£–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞...';
    }

    return (
      <form onSubmit={handleSubmit} style={{ marginTop: '1rem' }}>
        <div style={{ position: 'relative' }}>
          {step.type === 'textarea' ? (
            <textarea
              value={inputValue}
              onChange={(e) => setInputValue(e.target.value)}
              placeholder={placeholder}
              autoFocus
              style={{
                width: '100%',
                padding: '1rem 4rem 1rem 1rem',
                border: '2px solid #e0e0e0',
                borderRadius: '25px',
                fontSize: '1rem',
                resize: 'none',
                minHeight: '50px',
                fontFamily: 'inherit',
                outline: 'none',
                boxSizing: 'border-box'
              }}
              onFocus={(e) => e.target.style.borderColor = '#25d366'}
              onBlur={(e) => e.target.style.borderColor = '#e0e0e0'}
            />
          ) : (
            <input
              type={(step.type === 'phone' || step.id === 'delivery' && currentMode === 'pickup') ? 'tel' : 'text'}
              value={inputValue}
              onChange={(e) => setInputValue(e.target.value)}
              placeholder={placeholder}
              required={!step.optional}
              autoFocus
              style={{
                width: '100%',
                padding: '1rem 4rem 1rem 1rem',
                border: '2px solid #e0e0e0',
                borderRadius: '25px',
                fontSize: '1rem',
                fontFamily: 'inherit',
                outline: 'none',
                boxSizing: 'border-box'
              }}
              onFocus={(e) => e.target.style.borderColor = '#25d366'}
              onBlur={(e) => e.target.style.borderColor = '#e0e0e0'}
            />
          )}
          
          <button
            type="submit"
            disabled={!inputValue.trim() && !step.optional}
            style={{
              position: 'absolute',
              right: '8px',
              top: '50%',
              transform: 'translateY(-50%)',
              background: (!inputValue.trim() && !step.optional) 
                ? '#ccc' 
                : 'linear-gradient(135deg, #25d366, #128c7e)',
              color: 'white',
              border: 'none',
              borderRadius: '50%',
              width: '36px',
              height: '36px',
              cursor: (!inputValue.trim() && !step.optional) ? 'not-allowed' : 'pointer',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              fontSize: '1.2rem'
            }}
          >
            ‚û§
          </button>
        </div>
        
        {step.optional && (
          <button
            type="button"
            onClick={() => handleUserInput('')}
            style={{
              marginTop: '0.5rem',
              padding: '0.5rem 1rem',
              background: 'transparent',
              color: '#666',
              border: 'none',
              borderRadius: '15px',
              cursor: 'pointer',
              fontSize: '0.9rem'
            }}
          >
            –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å ‚è≠Ô∏è
          </button>
        )}
      </form>
    );
  };

  if (!isOpen) return null;

  return (
    <div style={{
      position: 'fixed',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      backgroundColor: 'rgba(0,0,0,0.5)',
      zIndex: 2000,
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      padding: '20px'
    }}>
      <div style={{
        background: 'linear-gradient(135deg, #e5ddd5, #f0f0f0)',
        borderRadius: '20px',
        width: '100%',
        maxWidth: '400px',
        maxHeight: '80vh',
        display: 'flex',
        flexDirection: 'column',
        boxShadow: '0 20px 40px rgba(0,0,0,0.3)',
        overflow: 'hidden'
      }}>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞–∫ –≤ WhatsApp */}
        <div style={{
          background: 'linear-gradient(135deg, #25d366, #128c7e)',
          color: 'white',
          padding: '1rem',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'space-between',
          flexShrink: 0
        }}>
          <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>
            <div style={{
              width: '40px',
              height: '40px',
              borderRadius: '50%',
              background: 'white',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              fontSize: '1.5rem'
            }}>
              üçï
            </div>
            <div>
              <div style={{ fontWeight: 'bold', fontSize: '1.1rem' }}>
                {settings.projectTitle || '–†–µ—Å—Ç–æ—Ä–∞–Ω'}
              </div>
              <div style={{ fontSize: '0.8rem', opacity: 0.9 }}>
                –æ–Ω–ª–∞–π–Ω
              </div>
            </div>
          </div>
          <button
            onClick={onClose}
            style={{
              background: 'none',
              border: 'none',
              color: 'white',
              fontSize: '1.5rem',
              cursor: 'pointer',
              padding: '0.5rem',
              borderRadius: '50%'
            }}
          >
            ‚úï
          </button>
        </div>

        {/* –ß–∞—Ç */}
        <div 
          ref={chatContainerRef}
          style={{
            flex: 1,
            padding: '1rem',
            overflowY: 'auto',
            display: 'flex',
            flexDirection: 'column',
            gap: '1rem',
            minHeight: '300px'
          }}
        >
          {messages.map((message, index) => (
            <div
              key={index}
              style={{
                display: 'flex',
                justifyContent: message.type === 'user' ? 'flex-end' : 'flex-start',
                animation: 'messageSlideIn 0.3s ease-out'
              }}
            >
              <div
                style={{
                  maxWidth: '80%',
                  padding: '0.8rem 1rem',
                  borderRadius: message.type === 'user' ? '20px 20px 5px 20px' : '20px 20px 20px 5px',
                  background: message.type === 'user' 
                    ? 'linear-gradient(135deg, #dcf8c6, #d1f2cc)' 
                    : 'white',
                  boxShadow: '0 2px 8px rgba(0,0,0,0.1)',
                  whiteSpace: 'pre-wrap',
                  fontSize: '1rem',
                  lineHeight: '1.4'
                }}
              >
                {message.text}
              </div>
            </div>
          ))}
          
          {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∞–Ω–∏—è */}
          {isTyping && (
            <div style={{ display: 'flex', justifyContent: 'flex-start' }}>
              <div style={{
                padding: '0.8rem 1rem',
                borderRadius: '20px 20px 20px 5px',
                background: 'white',
                boxShadow: '0 2px 8px rgba(0,0,0,0.1)',
                display: 'flex',
                alignItems: 'center',
                gap: '0.5rem'
              }}>
                <div style={{
                  display: 'flex',
                  gap: '3px'
                }}>
                  <div style={{
                    width: '8px',
                    height: '8px',
                    borderRadius: '50%',
                    background: '#999',
                    animation: 'typing 1.4s infinite ease-in-out'
                  }} />
                  <div style={{
                    width: '8px',
                    height: '8px',
                    borderRadius: '50%',
                    background: '#999',
                    animation: 'typing 1.4s infinite ease-in-out 0.2s'
                  }} />
                  <div style={{
                    width: '8px',
                    height: '8px',
                    borderRadius: '50%',
                    background: '#999',
                    animation: 'typing 1.4s infinite ease-in-out 0.4s'
                  }} />
                </div>
              </div>
            </div>
          )}
          
          {/* –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è –∞–≤—Ç–æ—Å–∫—Ä–æ–ª–ª–∞ */}
          <div ref={messagesEndRef} />
        </div>

        {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */}
        <div style={{ padding: '1rem', flexShrink: 0 }}>
          {renderInput()}
        </div>
      </div>

      <style>
        {`
          @keyframes messageSlideIn {
            from {
              opacity: 0;
              transform: translateY(20px);
            }
            to {
              opacity: 1;
              transform: translateY(0);
            }
          }
          
          @keyframes typing {
            0%, 60%, 100% {
              transform: translateY(0);
              opacity: 0.4;
            }
            30% {
              transform: translateY(-10px);
              opacity: 1;
            }
          }
        `}
      </style>
    </div>
  );
};

export default OrderForm;
