// ProductCardExample.jsx - –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å clientConfig –∏ productUtils

import React from 'react';
import { 
  getProductPrefixes, 
  isChefRecommended, 
  isFlashProduct,
  getProductCardStyles 
} from '../utils/productUtils.js';
import { getProductPrefixConfig, getProductSettings } from '../config/clientConfig.js';

/**
 * –ü—Ä–∏–º–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Ç–æ–≤–∞—Ä–∞ —Å –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 */
const ProductCardExample = ({ product, onAddToCart }) => {
  // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  const productSettings = getProductSettings();
  
  // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å—ã —Ç–æ–≤–∞—Ä–∞
  const prefixes = getProductPrefixes(product.id);
  
  // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞
  const cardStyles = getProductCardStyles(product);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∞ –±–µ–π–¥–∂–µ–π —Å —É—á–µ—Ç–æ–º –∫–∞—Å—Ç–æ–º–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  const renderBadges = () => {
    return prefixes.map((prefixInfo, index) => {
      if (prefixInfo.prefix === 'C') return null; // –ö–æ—Ä–æ–Ω–∞ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ
      
      // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ Google Sheets
      const customConfig = getProductPrefixConfig(prefixInfo.prefix);
      const config = customConfig || prefixInfo;
      
      return (
        <div
          key={prefixInfo.prefix}
          style={{
            position: 'absolute',
            top: `${2.2 + (index * 1.3)}rem`,
            right: '1rem',
            backgroundColor: config.color,
            color: '#fff',
            fontWeight: 'bold',
            padding: '0.2rem 0.45rem',
            borderRadius: '999px',
            fontSize: '0.6rem',
            zIndex: 2,
            display: 'flex',
            alignItems: 'center',
            gap: '0.2rem'
          }}
        >
          {config.emoji && <span>{config.emoji}</span>}
          {config.label}
        </div>
      );
    });
  };

  return (
    <div 
      style={{
        position: 'relative',
        background: '#fff7ed',
        borderRadius: '20px',
        padding: '1rem',
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∏–∑ —É—Ç–∏–ª–∏—Ç—ã
        ...cardStyles.container
      }}
    >
      {/* –ö–æ—Ä–æ–Ω–∞ —à–µ—Ñ–∞ */}
      {isChefRecommended(product) && (
        <div style={{
          position: 'absolute',
          top: '1rem',
          left: '1rem',
          fontSize: '1.5rem',
          zIndex: 3,
          animation: 'crownBounce 1.5s infinite'
        }}>
          {(() => {
            const customConfig = getProductPrefixConfig('C');
            return customConfig?.emoji || 'üëë';
          })()}
        </div>
      )}

      {/* Flash –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä */}
      {isFlashProduct(product) && productSettings.flashDiscountPercent && (
        <div style={{
          position: 'absolute',
          top: '0',
          left: '0',
          right: '0',
          backgroundColor: '#ff0000',
          color: '#fff',
          textAlign: 'center',
          padding: '0.5rem',
          borderRadius: '20px 20px 0 0',
          fontWeight: 'bold',
          fontSize: '0.8rem',
          animation: 'flashPulse 1s infinite'
        }}>
          ‚ö° FLASH -{productSettings.flashDiscountPercent}%
        </div>
      )}

      {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ */}
      {product.image && (
        <img 
          src={product.image} 
          alt={product.name}
          style={{
            width: '100%',
            height: '150px',
            objectFit: 'cover',
            borderRadius: '10px',
            marginTop: isFlashProduct(product) ? '2rem' : '0'
          }}
        />
      )}

      {/* –ë–µ–π–¥–∂–∏ –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤ */}
      {productSettings.enablePrefixSystem && renderBadges()}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ */}
      <div style={{ textAlign: 'center', marginTop: '1rem' }}>
        <h3 style={{ 
          fontSize: '1.1rem', 
          fontWeight: 'bold',
          margin: '0 0 0.5rem 0'
        }}>
          {product.name}
        </h3>
        
        {product.description && (
          <p style={{ 
            fontSize: '0.9rem', 
            color: '#666',
            margin: '0 0 1rem 0'
          }}>
            {product.description}
          </p>
        )}

        {/* –¶–µ–Ω–∞ */}
        <div style={{ marginBottom: '1rem' }}>
          {isFlashProduct(product) ? (
            <div>
              <span style={{ 
                textDecoration: 'line-through',
                color: '#999',
                marginRight: '0.5rem'
              }}>
                {product.price}‚ÇΩ
              </span>
              <span style={{ 
                fontSize: '1.2rem',
                fontWeight: 'bold',
                color: '#ff0000'
              }}>
                {Math.round(product.price * (100 - productSettings.flashDiscountPercent) / 100)}‚ÇΩ
              </span>
            </div>
          ) : (
            <span style={{ 
              fontSize: '1.2rem',
              fontWeight: 'bold'
            }}>
              {product.price}‚ÇΩ
            </span>
          )}
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è */}
        <button
          onClick={() => onAddToCart(product)}
          style={{
            backgroundColor: isChefRecommended(product) ? '#FFD700' : '#ff7f32',
            color: isChefRecommended(product) ? '#000' : '#fff',
            border: 'none',
            borderRadius: '25px',
            padding: '0.8rem 1.5rem',
            fontSize: '1rem',
            fontWeight: 'bold',
            cursor: 'pointer',
            transition: 'all 0.3s ease',
            boxShadow: isChefRecommended(product) ? '0 4px 15px rgba(255, 215, 0, 0.3)' : 'none'
          }}
          onMouseEnter={(e) => {
            e.target.style.transform = 'translateY(-2px)';
            e.target.style.boxShadow = '0 6px 20px rgba(0,0,0,0.2)';
          }}
          onMouseLeave={(e) => {
            e.target.style.transform = 'translateY(0)';
            e.target.style.boxShadow = isChefRecommended(product) ? '0 4px 15px rgba(255, 215, 0, 0.3)' : 'none';
          }}
        >
          –í –∫–æ—Ä–∑–∏–Ω—É
        </button>
      </div>

      {/* –î–µ–±–∞–≥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (—Ç–æ–ª—å–∫–æ –≤ dev —Ä–µ–∂–∏–º–µ) */}
      {process.env.NODE_ENV === 'development' && (
        <div style={{
          position: 'absolute',
          bottom: '0',
          left: '0',
          right: '0',
          backgroundColor: 'rgba(0,0,0,0.8)',
          color: '#fff',
          padding: '0.5rem',
          fontSize: '0.7rem',
          borderRadius: '0 0 20px 20px'
        }}>
          ID: {product.id} | –ü—Ä–µ—Ñ–∏–∫—Å—ã: {prefixes.map(p => p.prefix).join(', ')}
        </div>
      )}
    </div>
  );
};

export default ProductCardExample;